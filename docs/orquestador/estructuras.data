[{"_1":2,"_6":7},"root",{"_3":4},"data",{"_5":-5},"theme","routes/docs",{"_3":8},{"_9":10,"_21":22},"mdx",{"_11":12,"_13":14,"_19":20},"compiledSource","\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"-estructura-de-proyecto-generado\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#-estructura-de-proyecto-generado\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"🧱 Estructura de Proyecto Generado\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Al crear un proyecto con el Orquestador de Lambda, se genera automáticamente la siguiente estructura de carpetas:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      raw: \"<empresa>_<nombre_proyecto>_<TIPO>/\\r\\n├── <empresa>_<nombre_proyecto>_<TIPO>/\\r\\n│   ├── config/\\r\\n│   │   ├── config.json\\r\\n│   │   └── .env\\r\\n│   ├── pasos/\\r\\n│   │   └── paso_01_transformar.py\\r\\n│   ├── recursos/\\r\\n│   │   ├── sql/\\r\\n│   │   └── excels/\\r\\n│   ├── logs/\\r\\n│   ├── resultados/\\r\\n│   └── __init__.py\\r\\n├── ejecucion.py\\r\\n├── README.md\\r\\n├── .gitignore\\r\\n├── setup.py\\r\\n└── .git/\\n\",\n      children: _jsxs(_components.code, {\n        className: \"code-highlight\",\n        children: [_jsx(_components.span, {\n          className: \"code-line\",\n          children: \"<empresa>_<nombre_proyecto>_<TIPO>/\\r\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"├── <empresa>_<nombre_proyecto>_<TIPO>/\\r\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   ├── config/\\r\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   │   ├── config.json\\r\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   │   └── .env\\r\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   ├── pasos/\\r\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   │   └── paso_01_transformar.py\\r\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   ├── recursos/\\r\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   │   ├── sql/\\r\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   │   └── excels/\\r\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   ├── logs/\\r\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   ├── resultados/\\r\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"│   └── __init__.py\\r\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"├── ejecucion.py\\r\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"├── README.md\\r\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"├── .gitignore\\r\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"├── setup.py\\r\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"└── .git/\\n\"\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"-descripción-de-carpetas-y-archivos\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#-descripción-de-carpetas-y-archivos\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"📁 Descripción de carpetas y archivos\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Elemento\"\n          }), _jsx(_components.th, {\n            children: \"Descripción\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"config/\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Contiene la configuración general del proyecto. Incluye \", _jsx(_components.code, {\n              children: \"config.json\"\n            }), \" con parámetros de ejecución y \", _jsx(_components.code, {\n              children: \".env\"\n            }), \" para variables de entorno.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"pasos/\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Carpeta donde se definen los pasos (ETL, BOT, etc). Cada paso es una clase que hereda de \", _jsx(_components.code, {\n              children: \"Paso\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"recursos/sql/\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Almacena scripts SQL o consultas parametrizadas.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"recursos/excels/\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Carpeta para archivos Excel de entrada o referencia.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"logs/\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Archivos de logs generados por la ejecución.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"resultados/\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Contiene los resultados de cada ejecución.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"ejecucion.py\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Punto de entrada principal. Llama al ejecutor y define los pasos del proyecto.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"README.md\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Documentación generada automáticamente con metadatos del proyecto.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \".gitignore\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Archivo que excluye caché, entornos virtuales y archivos auxiliares.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"setup.py\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Permite instalar el proyecto como paquete editable o productivo.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"__init__.py\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Habilita cada carpeta como paquete Python.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \".git/\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Repositorio Git creado automáticamente con commit inicial.\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"-funcionalidades-automatizadas\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#-funcionalidades-automatizadas\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"🧠 Funcionalidades automatizadas\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"✔ Estructura generada según el tipo de proyecto\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"✔ \", _jsx(_components.code, {\n          children: \"README.md\"\n        }), \" y \", _jsx(_components.code, {\n          children: \".gitignore\"\n        }), \" autogenerados\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"✔ Repositorio Git local con primer commit\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"✔ Archivo de ejecución (\", _jsx(_components.code, {\n          children: \"ejecucion.py\"\n        }), \") listo para usar\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"✔ Instalación como paquete (\", _jsx(_components.code, {\n          children: \"pip install -e .\"\n        }), \")\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"-recomendación-de-uso\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#-recomendación-de-uso\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"🏃 Recomendación de uso\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      raw: \"python -m venv env\\r\\nenv\\\\scripts\\\\activate\\r\\npip install -e .\\r\\npython -m <empresa>_<nombre_proyecto>_<TIPO>.ejecucion\\n\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"python \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-m\"\n          }), \" venv \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"env\"\n          }), \"\\r\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"env\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"\\\\\"\n          }), \"scripts\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"\\\\\"\n          }), \"activate\\r\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"pip \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"install\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-e\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin class-name\",\n            children: \".\"\n          }), \"\\r\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"python \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-m\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"<\"\n          }), \"empresa\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \">\"\n          }), \"_\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"<\"\n          }), \"nombre_proyecto\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \">\"\n          }), \"_\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"<\"\n          }), \"TIPO\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \">\"\n          }), \".ejecucion\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Esto creará un entorno funcional para trabajar con pasos modulares y ejecución trazable.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter",{"_15":16,"_17":18},"title","Estructura del proyecto","description","Esta sección documenta la estructura generada automáticamente por el Orquestador de Lambda.","scope",{},"tocs",[23,30,33,36],{"_24":25,"_26":27,"_28":29},"level",2,"text","🧱 Estructura de Proyecto Generado","href","#-estructura-de-proyecto-generado",{"_24":25,"_26":31,"_28":32},"📁 Descripción de carpetas y archivos","#-descripcin-de-carpetas-y-archivos",{"_24":25,"_26":34,"_28":35},"🧠 Funcionalidades automatizadas","#-funcionalidades-automatizadas",{"_24":25,"_26":37,"_28":38},"🏃 Recomendación de uso","#-recomendacin-de-uso"]
